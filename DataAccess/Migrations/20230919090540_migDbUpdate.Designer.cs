// <auto-generated />
using System;
using DataAccess.Concrete;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DataAccess.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20230919090540_migDbUpdate")]
    partial class migDbUpdate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Entity.Concrete.RezervasyonIstegi", b =>
                {
                    b.Property<int>("RezervasyonIstegiID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RezervasyonIstegiID"));

                    b.Property<bool>("KisilerFarkliVagonlaraYerlestirilebilir")
                        .HasColumnType("bit");

                    b.Property<int>("RezervasyonYapilacakKisiSayisi")
                        .HasColumnType("int");

                    b.Property<int>("TrenID")
                        .HasColumnType("int");

                    b.HasKey("RezervasyonIstegiID");

                    b.HasIndex("TrenID");

                    b.ToTable("rezervasyonIstekleri");
                });

            modelBuilder.Entity("Entity.Concrete.RezervasyonSonucu", b =>
                {
                    b.Property<int>("RezervasyonSonucuID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RezervasyonSonucuID"));

                    b.Property<int>("RezervasyonIstegiID")
                        .HasColumnType("int");

                    b.Property<bool>("RezervasyonYapilabilir")
                        .HasColumnType("bit");

                    b.HasKey("RezervasyonSonucuID");

                    b.ToTable("RezervasyonSonuclari");
                });

            modelBuilder.Entity("Entity.Concrete.Tren", b =>
                {
                    b.Property<int>("TrenID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TrenID"));

                    b.Property<string>("Ad")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TrenID");

                    b.ToTable("Trenler");

                    b.HasData(
                        new
                        {
                            TrenID = 1,
                            Ad = "Başkent Ekspres"
                        });
                });

            modelBuilder.Entity("Entity.Concrete.Vagon", b =>
                {
                    b.Property<int>("VagonID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VagonID"));

                    b.Property<string>("Ad")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DoluKoltukAdet")
                        .HasColumnType("int");

                    b.Property<int>("Kapasite")
                        .HasColumnType("int");

                    b.Property<int>("TrenID")
                        .HasColumnType("int");

                    b.HasKey("VagonID");

                    b.HasIndex("TrenID");

                    b.ToTable("Vagonlar");

                    b.HasData(
                        new
                        {
                            VagonID = 1,
                            Ad = "Vagon 1",
                            DoluKoltukAdet = 68,
                            Kapasite = 100,
                            TrenID = 1
                        },
                        new
                        {
                            VagonID = 2,
                            Ad = "Vagon 2",
                            DoluKoltukAdet = 50,
                            Kapasite = 90,
                            TrenID = 1
                        },
                        new
                        {
                            VagonID = 3,
                            Ad = "Vagon 3",
                            DoluKoltukAdet = 60,
                            Kapasite = 60,
                            TrenID = 1
                        },
                        new
                        {
                            VagonID = 4,
                            Ad = "Vagon 4",
                            DoluKoltukAdet = 25,
                            Kapasite = 70,
                            TrenID = 1
                        });
                });

            modelBuilder.Entity("Entity.Concrete.YerlesimAyrinti", b =>
                {
                    b.Property<int>("YerlesimAyrintiID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("YerlesimAyrintiID"));

                    b.Property<int>("KisiSayisi")
                        .HasColumnType("int");

                    b.Property<int>("RezervasyonIstegiID")
                        .HasColumnType("int");

                    b.Property<int?>("RezervasyonSonucuID")
                        .HasColumnType("int");

                    b.Property<string>("VagonAdi")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("YerlesimAyrintiID");

                    b.HasIndex("RezervasyonSonucuID");

                    b.ToTable("YerlesimAyrintilari");
                });

            modelBuilder.Entity("Entity.Concrete.RezervasyonIstegi", b =>
                {
                    b.HasOne("Entity.Concrete.Tren", "Tren")
                        .WithMany()
                        .HasForeignKey("TrenID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Tren");
                });

            modelBuilder.Entity("Entity.Concrete.Vagon", b =>
                {
                    b.HasOne("Entity.Concrete.Tren", "Tren")
                        .WithMany("Vagonlar")
                        .HasForeignKey("TrenID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Tren");
                });

            modelBuilder.Entity("Entity.Concrete.YerlesimAyrinti", b =>
                {
                    b.HasOne("Entity.Concrete.RezervasyonSonucu", null)
                        .WithMany("YerlesimAyrinti")
                        .HasForeignKey("RezervasyonSonucuID");
                });

            modelBuilder.Entity("Entity.Concrete.RezervasyonSonucu", b =>
                {
                    b.Navigation("YerlesimAyrinti");
                });

            modelBuilder.Entity("Entity.Concrete.Tren", b =>
                {
                    b.Navigation("Vagonlar");
                });
#pragma warning restore 612, 618
        }
    }
}
